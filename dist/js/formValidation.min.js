"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _createForOfIteratorHelper(t,r){var e,n,o,i,a="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(a)return n=!(e=!0),{s:function(){a=a.call(t)},n:function(){var t=a.next();return e=t.done,t},e:function(t){n=!0,o=t},f:function(){try{e||null==a.return||a.return()}finally{if(n)throw o}}};if(Array.isArray(t)||(a=_unsupportedIterableToArray(t))||r&&t&&"number"==typeof t.length)return a&&(t=a),i=0,{s:r=function(){},n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,r){var e;if(t)return"string"==typeof t?_arrayLikeToArray(t,r):"Map"===(e="Object"===(e=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:e)||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(t,r):void 0}function _arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function _regeneratorRuntime(){_regeneratorRuntime=function(){return a};var c,a={},t=Object.prototype,l=t.hasOwnProperty,f=Object.defineProperty||function(t,r,e){t[r]=e.value},r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",e=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function i(t,r,e){return Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[r]}try{i({},"")}catch(c){i=function(t,r,e){return t[r]=e}}function u(t,r,e,n){var o,i,a,u,r=r&&r.prototype instanceof v?r:v,r=Object.create(r.prototype),n=new I(n||[]);return f(r,"_invoke",{value:(o=t,i=e,a=n,u=h,function(t,r){if(u===y)throw new Error("Generator is already running");if(u===m){if("throw"===t)throw r;return{value:c,done:!0}}for(a.method=t,a.arg=r;;){var e=a.delegate;if(e){e=function t(r,e){var n=e.method,o=r.iterator[n];if(o===c)return e.delegate=null,"throw"===n&&r.iterator.return&&(e.method="return",e.arg=c,t(r,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;n=s(o,r.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,d;o=n.arg;return o?o.done?(e[r.resultName]=o.value,e.next=r.nextLoc,"return"!==e.method&&(e.method="next",e.arg=c),e.delegate=null,d):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}(e,a);if(e){if(e===d)continue;return e}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if(u===h)throw u=m,a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);u=y;e=s(o,i,a);if("normal"===e.type){if(u=a.done?m:p,e.arg===d)continue;return{value:e.arg,done:a.done}}"throw"===e.type&&(u=m,a.method="throw",a.arg=e.arg)}})}),r}function s(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}a.wrap=u;var h="suspendedStart",p="suspendedYield",y="executing",m="completed",d={};function v(){}function g(){}function w(){}var r={},b=(i(r,n,function(){return this}),Object.getPrototypeOf),b=b&&b(b(k([]))),_=(b&&b!==t&&l.call(b,n)&&(r=b),w.prototype=v.prototype=Object.create(r));function x(t){["next","throw","return"].forEach(function(r){i(t,r,function(t){return this._invoke(r,t)})})}function L(a,u){var r;f(this,"_invoke",{value:function(e,n){function t(){return new u(function(t,r){!function r(t,e,n,o){var i,t=s(a[t],a,e);if("throw"!==t.type)return(e=(i=t.arg).value)&&"object"==_typeof(e)&&l.call(e,"__await")?u.resolve(e.__await).then(function(t){r("next",t,n,o)},function(t){r("throw",t,n,o)}):u.resolve(e).then(function(t){i.value=t,n(i)},function(t){return r("throw",t,n,o)});o(t.arg)}(e,n,t,r)})}return r=r?r.then(t,t):t()}})}function E(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function S(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function I(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(E,this),this.reset(!0)}function k(r){if(r||""===r){var e,t=r[n];if(t)return t.call(r);if("function"==typeof r.next)return r;if(!isNaN(r.length))return e=-1,(t=function t(){for(;++e<r.length;)if(l.call(r,e))return t.value=r[e],t.done=!1,t;return t.value=c,t.done=!0,t}).next=t}throw new TypeError(_typeof(r)+" is not iterable")}return f(_,"constructor",{value:g.prototype=w,configurable:!0}),f(w,"constructor",{value:g,configurable:!0}),g.displayName=i(w,o,"GeneratorFunction"),a.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},a.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,w):(t.__proto__=w,i(t,o,"GeneratorFunction")),t.prototype=Object.create(_),t},a.awrap=function(t){return{__await:t}},x(L.prototype),i(L.prototype,e,function(){return this}),a.AsyncIterator=L,a.async=function(t,r,e,n,o){void 0===o&&(o=Promise);var i=new L(u(t,r,e,n),o);return a.isGeneratorFunction(r)?i:i.next().then(function(t){return t.done?t.value:i.next()})},x(_),i(_,o,"Generator"),i(_,n,function(){return this}),i(_,"toString",function(){return"[object Generator]"}),a.keys=function(t){var r,e=Object(t),n=[];for(r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},a.values=k,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=c,this.done=!1,this.delegate=null,this.method="next",this.arg=c,this.tryEntries.forEach(S),!t)for(var r in this)"t"===r.charAt(0)&&l.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=c)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,r){return i.type="throw",i.arg=e,n.next=t,r&&(n.method="next",n.arg=c),!!r}for(var r=this.tryEntries.length-1;0<=r;--r){var o=this.tryEntries[r],i=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var a=l.call(o,"catchLoc"),u=l.call(o,"finallyLoc");if(a&&u){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,r){for(var e=this.tryEntries.length-1;0<=e;--e){var n=this.tryEntries[e];if(n.tryLoc<=this.prev&&l.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var i=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=r&&r<=o.finallyLoc?null:o)?o.completion:{};return i.type=t,i.arg=r,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(i)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),d},finish:function(t){for(var r=this.tryEntries.length-1;0<=r;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),S(e),d}},catch:function(t){for(var r=this.tryEntries.length-1;0<=r;--r){var e,n,o=this.tryEntries[r];if(o.tryLoc===t)return"throw"===(e=o.completion).type&&(n=e.arg,S(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:k(t),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=c),d}},a}function asyncGeneratorStep(t,r,e,n,o,i,a){try{var u=t[i](a),c=u.value}catch(t){return void e(t)}u.done?r(c):Promise.resolve(c).then(n,o)}function _asyncToGenerator(u){return function(){var t=this,a=arguments;return new Promise(function(r,e){var n=u.apply(t,a);function o(t){asyncGeneratorStep(n,r,e,o,i,"next",t)}function i(t){asyncGeneratorStep(n,r,e,o,i,"throw",t)}o(void 0)})}}var form=document.querySelector(".form"),formPopup=document.querySelector(".contact .popup"),nameInput=document.querySelector('.form__inputBox input[type="text"]'),emailInput=document.querySelector('.form__inputBox input[type="email"]'),phoneInput=document.querySelector('.form__inputBox input[type="tel"]'),msgInput=document.querySelector(".form__inputBox textarea"),showSuccessPopup=function(){var t=_asyncToGenerator(_regeneratorRuntime().mark(function t(){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return formPopup.classList.add("slide-in-blurred-right"),t.next=3,new Promise(function(t){setTimeout(function(){formPopup.classList.add("slide-out-blurred-right"),t()},3e3)});case 3:return t.next=5,new Promise(function(t){setTimeout(function(){formPopup.classList.remove("slide-in-blurred-right","slide-out-blurred-right"),t()},1e3)});case 5:case"end":return t.stop()}},t)}));return function(){return t.apply(this,arguments)}}(),showError=function(t,r){var t=t.parentElement,e=t.querySelector(".warning");t.classList.add("form__inputBox--error"),e.textContent=r},clearError=function(t){t.parentElement.classList.remove("form__inputBox--error")},checkLength=function(t,r){t.value.length<r&&showError(t,"Numer telefonu musi posiadać conajmniej ".concat(r," cyfr."))},checkPhoneNum=function(t){/^[0-9]+$/.test(t.value)?clearError(t):showError(t,"Numer telefonu może składać się tylko z cyfr.")},checkForm=function(t){t.forEach(function(t){0===t.value.trim().length?showError(t,"To pole nie może być puste!"):clearError(t)})},checkFormErrors=function(){var t=document.querySelectorAll(".form__inputBox"),r=0;t.forEach(function(t){t.classList.contains("form__inputBox--error")&&r++}),0===r&&(showSuccessPopup(),clearInputs([nameInput,emailInput,phoneInput,msgInput]))},clearInputs=function(t){var r,e=_createForOfIteratorHelper(t);try{for(e.s();!(r=e.n()).done;)r.value.value=""}catch(t){e.e(t)}finally{e.f()}};form.addEventListener("submit",function(t){t.preventDefault(),checkForm([nameInput,emailInput,phoneInput,msgInput]),checkPhoneNum(phoneInput),checkLength(phoneInput,9),checkFormErrors()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
